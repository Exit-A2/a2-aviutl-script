@角丸四角形
--track0:Xサイズ,0,2000,100,0.1
--track1:Yサイズ,0,2000,100,0.1
--track2:半径,0,500,5,0.1
--color:色:0xffffff
function rounded_rect(x, y, xsize, ysize, radius, color)
    obj.load("figure", "四角形", color, 100, 4000)
    obj.effect("リサイズ", "X", xsize - (radius * 2), "Y", ysize, "ドット数でサイズ指定", 1)
    obj.draw(x, y)
    obj.load("figure", "四角形", color, 100, 4000)
    obj.effect("リサイズ", "X", xsize, "Y", ysize - (radius * 2), "ドット数でサイズ指定", 1)
    obj.draw(x, y)
    obj.load("figure", "円", color, radius * 2, 4000)
    obj.draw(x - (xsize / 2) + radius, y - (ysize / 2) + radius) --左上
    obj.draw(x + (xsize / 2) - radius, y - (ysize / 2) + radius) --右上
    obj.draw(x - (xsize / 2) + radius, y + (ysize / 2) - radius) --左下
    obj.draw(x + (xsize / 2) - radius, y + (ysize / 2) - radius) --右下
end
obj.setoption("drawtarget", "tempbuffer", obj.track0, obj.track1)
rounded_rect(0, 0, obj.track0, obj.track1, obj.track2, obj.color)
obj.setoption("drawtarget", "framebuffer")
obj.load("tempbuffer")

@ランダム画像
--track0:コマ落ち,1,60,1,1
--dialog:ファイルの場所,path="C:\\";拡張子,ex="png";
r = obj.rand(mi, ma, obj.layer * obj.totalframe * obj.screen_h, math.floor(obj.frame / obj.track0))
obj.load("image", path .. tostring(r) .. "." .. ex)

@数字から画像
--track0:数字,0,1000,0,1
--dialog:ファイルの場所,path="C:\\";最小値,mi=0;最大値,ma=1;拡張子,ex="png";
obj.load("image", path .. tostring(obj.track0) .. "." .. ex)